<section class="py-20 lg:py-24 bg-gradient-to-b from-white via-gray-50/40 to-gray-50 dark:from-dark-950 dark:via-dark-900/40 dark:to-dark-900 relative overflow-hidden">
    <!-- Decorative background elements -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
        <div class="absolute top-1/4 -left-24 w-96 h-96 bg-indigo-300/12 dark:bg-indigo-800/10 rounded-full blur-3xl"></div>
        <div class="absolute bottom-1/4 -right-24 w-80 h-80 bg-purple-300/10 dark:bg-purple-800/8 rounded-full blur-3xl"></div>
    </div>

    <div class="relative z-10 max-w-7xl mx-auto px-6 lg:px-12">
        <!-- Section Header -->
        <div class="text-center mb-16">
            <h2 class="text-4xl lg:text-5xl font-bold mb-4 bg-gradient-to-r from-gray-900 via-primary-700 to-gray-900 dark:from-gray-100 dark:via-primary-400 dark:to-gray-100 bg-clip-text text-transparent">
                Powerful Features
            </h2>
            <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
                Modern static site generation with features that make development fast, intuitive, and type-safe
            </p>
        </div>

        <!-- Tabbed Interface -->
        <div class="max-w-6xl mx-auto">
            <!-- Tab Buttons -->
            <div class="flex flex-wrap justify-center gap-3 mb-8" role="tablist">
                <button class="feature-tab active px-6 py-3 rounded-xl font-semibold text-sm transition-all duration-300 bg-gradient-to-r from-primary-500 to-blue-600 text-white shadow-md shadow-gray-900/10 dark:shadow-black/20"
                        data-tab="typescript"
                        role="tab"
                        aria-selected="true">
                    TypeScript-First
                </button>
                <button class="feature-tab px-6 py-3 rounded-xl font-semibold text-sm transition-all duration-300 bg-white/90 dark:bg-dark-800 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-700 hover:shadow-sm hover:shadow-gray-900/5 dark:hover:shadow-black/10 border border-gray-300/60 dark:border-dark-600"
                        data-tab="isg"
                        role="tab"
                        aria-selected="false">
                    ISG & Caching
                </button>
                <button class="feature-tab px-6 py-3 rounded-xl font-semibold text-sm transition-all duration-300 bg-white/90 dark:bg-dark-800 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-700 hover:shadow-sm hover:shadow-gray-900/5 dark:hover:shadow-black/10 border border-gray-300/60 dark:border-dark-600"
                        data-tab="templates"
                        role="tab"
                        aria-selected="false">
                    Eta Templates
                </button>
                <button class="feature-tab px-6 py-3 rounded-xl font-semibold text-sm transition-all duration-300 bg-white/90 dark:bg-dark-800 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-700 hover:shadow-sm hover:shadow-gray-900/5 dark:hover:shadow-black/10 border border-gray-300/60 dark:border-dark-600"
                        data-tab="routing"
                        role="tab"
                        aria-selected="false">
                    Filesystem Routing
                </button>
                <button class="feature-tab px-6 py-3 rounded-xl font-semibold text-sm transition-all duration-300 bg-white/90 dark:bg-dark-800 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-dark-700 hover:shadow-sm hover:shadow-gray-900/5 dark:hover:shadow-black/10 border border-gray-300/60 dark:border-dark-600"
                        data-tab="markdown"
                        role="tab"
                        aria-selected="false">
                    Markdown Pipeline
                </button>
            </div>

            <!-- Tab Content -->
            <div class="feature-content-wrapper bg-white/80 dark:bg-dark-800/60 backdrop-blur-sm rounded-2xl border border-gray-200 dark:border-dark-600/60 shadow-2xl shadow-gray-900/10 dark:shadow-black/50 overflow-hidden lg:h-192">

                <!-- TypeScript Tab -->
                <div class="feature-content h-full active p-8 lg:p-12" data-content="typescript" role="tabpanel">
                    <div class="grid lg:grid-cols-2 gap-8 items-center h-full">
                        <div>
                            <h3 class="text-3xl font-bold mb-4 text-gray-900 dark:text-gray-100">
                                TypeScript-First Configuration
                            </h3>
                            <p class="text-lg text-gray-600 dark:text-gray-300 mb-6">
                                Built with TypeScript from the ground up. Get full type safety, IntelliSense autocomplete, and better debugging in your configuration files.
                            </p>
                            <ul class="space-y-3">
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Full type inference with <code class="text-sm bg-gray-100 dark:bg-dark-700 px-2 py-1 rounded">defineConfig()</code></span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">IntelliSense autocomplete in VS Code</span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Catch configuration errors before build</span>
                                </li>
                            </ul>
                            <a href="/configuration/file/" class="inline-flex items-center gap-2 mt-6 px-6 py-3 bg-gradient-to-r from-primary-500 to-blue-700 hover:from-primary-600 hover:to-blue-800 text-white font-semibold rounded-lg transition-all duration-200 shadow-md shadow-gray-900/10 dark:shadow-black/20 hover:shadow-lg hover:shadow-gray-900/15 dark:hover:shadow-black/30">
                                Learn More
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                </svg>
                            </a>
                        </div>
                        <div class="relative">
                            <pre class="language-typescript rounded-xl overflow-hidden shadow-md shadow-gray-900/5 dark:shadow-black/10"><code class="language-typescript">import { defineConfig } from '@stati/core';

export default defineConfig({
  site: {
    title: 'My Stati Site',
    baseUrl: 'https://example.com',
    defaultLocale: 'en-US',
  },

  markdown: {
    options: {
      html: true,
      linkify: true,
      typographer: true,
    },
  },

  isg: {
    enabled: true,
    ttlSeconds: 3600,
  },
});</code></pre>
                        </div>
                    </div>
                </div>

                <!-- ISG Tab -->
                <div class="feature-content h-full hidden p-8 lg:p-12" data-content="isg" role="tabpanel">
                    <div class="grid lg:grid-cols-2 gap-8 items-center h-full">
                        <div>
                            <h3 class="text-3xl font-bold mb-4 text-gray-900 dark:text-gray-100">
                                Incremental Static Generation
                            </h3>
                            <p class="text-lg text-gray-600 dark:text-gray-300 mb-6">
                                Smart caching and dependency tracking means Stati only rebuilds what actually changed. Perfect for large sites with hundreds or thousands of pages.
                            </p>
                            <ul class="space-y-3">
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Automatic dependency tracking</span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Selective rebuilds save time and resources</span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Flexible cache invalidation by path, tag, or age</span>
                                </li>
                            </ul>
                            <a href="/configuration/isg/" class="inline-flex items-center gap-2 mt-6 px-6 py-3 bg-gradient-to-r from-primary-500 to-blue-700 hover:from-primary-600 hover:to-blue-800 text-white font-semibold rounded-lg transition-all duration-200 shadow-md shadow-gray-900/10 dark:shadow-black/20 hover:shadow-lg hover:shadow-gray-900/15 dark:hover:shadow-black/30">
                                Learn More
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                </svg>
                            </a>
                        </div>
                        <div class="relative">
                            <pre class="language-bash rounded-xl overflow-hidden shadow-md shadow-gray-900/5 dark:shadow-black/10"><code class="language-bash"># Only rebuilds changed files
npm run build

# Invalidate specific paths
stati invalidate path:/blog/

# Invalidate by tag
stati invalidate tag:navigation

# Invalidate recent content (last 7 days)
stati invalidate age:7days

# Force full rebuild
stati build --clean</code></pre>
                            <div class="mt-4">
                                <pre class="language-javascript rounded-xl overflow-hidden shadow-md shadow-gray-900/5 dark:shadow-black/10"><code class="language-javascript">// Programmatic invalidation
import { invalidate } from '@stati/core';

await invalidate('tag:blog');
await invalidate('path:/about/ age:30days');</code></pre>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Templates Tab -->
                <div class="feature-content h-full hidden p-8 lg:p-12" data-content="templates" role="tabpanel">
                    <div class="grid lg:grid-cols-2 gap-8 items-center h-full">
                        <div>
                            <h3 class="text-3xl font-bold mb-4 text-gray-900 dark:text-gray-100">
                                Powerful Eta Templates
                            </h3>
                            <p class="text-lg text-gray-600 dark:text-gray-300 mb-6">
                                Fast, lightweight templating with EJS-like syntax. Supports hierarchical layout nesting, reusable partials, and callable partials that accept custom data like components.
                            </p>
                            <ul class="space-y-3">
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Hierarchical layout inheritance from parent directories</span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Reusable partials from any underscore-prefixed folder</span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Callable partials with <code class="text-sm bg-gray-100 dark:bg-dark-700 px-2 py-1 rounded">stati.props</code> for custom data</span>
                                </li>
                            </ul>
                            <a href="/core-concepts/templates/" class="inline-flex items-center gap-2 mt-6 px-6 py-3 bg-gradient-to-r from-primary-500 to-blue-700 hover:from-primary-600 hover:to-blue-800 text-white font-semibold rounded-lg transition-all duration-200 shadow-md shadow-gray-900/10 dark:shadow-black/20 hover:shadow-lg hover:shadow-gray-900/15 dark:hover:shadow-black/30">
                                Learn More
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                </svg>
                            </a>
                        </div>
                        <div class="relative">
                            <pre class="language-html rounded-xl overflow-hidden shadow-md shadow-gray-900/5 dark:shadow-black/10"><code class="language-html">&lt;!-- Layout nesting: site/blog/layout.eta --&gt;
&lt;div class="blog-container"&gt;
  &lt;aside&gt;
    &lt;%~ stati.partials.sidebar %&gt;
  &lt;/aside&gt;
  &lt;main&gt;
    &lt;%~ stati.content %&gt;
  &lt;/main&gt;
&lt;/div&gt;

&lt;!-- Callable partials with custom data --&gt;
&lt;%~ stati.partials.card({
  title: 'My Post',
  description: 'A great article',
  url: '/blog/my-post'
}) %&gt;

&lt;!-- Inside _partials/card.eta --&gt;
&lt;article&gt;
  &lt;h3&gt;&lt;%= stati.props.title %&gt;&lt;/h3&gt;
  &lt;p&gt;&lt;%= stati.props.description %&gt;&lt;/p&gt;
  &lt;a href="&lt;%= stati.props.url %&gt;"&gt;Read&lt;/a&gt;
&lt;/article&gt;</code></pre>
                        </div>
                    </div>
                </div>

                <!-- Routing Tab -->
                <div class="feature-content h-full hidden p-8 lg:p-12" data-content="routing" role="tabpanel">
                    <div class="grid lg:grid-cols-2 gap-8 items-center h-full">
                        <div>
                            <h3 class="text-3xl font-bold mb-4 text-gray-900 dark:text-gray-100">
                                Filesystem-Based Routing
                            </h3>
                            <p class="text-lg text-gray-600 dark:text-gray-300 mb-6">
                                Your directory structure is your site structure. No routing configuration needed - just create files and Stati handles the rest with clean URLs and unlimited nesting.
                            </p>
                            <ul class="space-y-3">
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Zero configuration required</span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Underscored folders (<code class="text-sm bg-gray-100 dark:bg-dark-700 px-2 py-1 rounded">_partials/</code>) are excluded from routing</span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Override URLs with <code class="text-sm bg-gray-100 dark:bg-dark-700 px-2 py-1 rounded">permalink</code> in frontmatter</span>
                                </li>
                            </ul>
                            <a href="/core-concepts/routing/" class="inline-flex items-center gap-2 mt-6 px-6 py-3 bg-gradient-to-r from-primary-500 to-blue-700 hover:from-primary-600 hover:to-blue-800 text-white font-semibold rounded-lg transition-all duration-200 shadow-md shadow-gray-900/10 dark:shadow-black/20 hover:shadow-lg hover:shadow-gray-900/15 dark:hover:shadow-black/30">
                                Learn More
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                </svg>
                            </a>
                        </div>
                        <div class="relative space-y-4">
                            <pre class="language-text rounded-xl overflow-hidden shadow-md shadow-gray-900/5 dark:shadow-black/10"><code class="language-text"># Basic routing
site/
├── index.md              → /
├── about.md              → /about/
└── blog/
    ├── index.md          → /blog/
    └── first-post.md     → /blog/first-post/</code></pre>
                            <pre class="language-text rounded-xl overflow-hidden shadow-md shadow-gray-900/5 dark:shadow-black/10"><code class="language-text"># Underscore exclusion
site/
├── _partials/            ❌ Not routed
│   └── header.eta
├── _components/          ❌ Not routed
│   └── card.eta
└── published.md          ✅ → /published/</code></pre>
                            <pre class="language-markdown rounded-xl overflow-hidden shadow-md shadow-gray-900/5 dark:shadow-black/10"><code class="language-markdown"># Permalink override
---
title: 'Featured Article'
permalink: '/featured/article/'
---
# Custom URL path!</code></pre>
                        </div>
                    </div>
                </div>

                <!-- Markdown Tab -->
                <div class="feature-content h-full hidden p-8 lg:p-12" data-content="markdown" role="tabpanel">
                    <div class="grid lg:grid-cols-2 gap-8 items-center h-full">
                        <div>
                            <h3 class="text-3xl font-bold mb-4 text-gray-900 dark:text-gray-100">
                                Enhanced Markdown Pipeline
                            </h3>
                            <p class="text-lg text-gray-600 dark:text-gray-300 mb-6">
                                Powered by Markdown-It with tables, task lists, auto-linking, and smart typography. Extend with any markdown-it plugin for additional features like syntax highlighting.
                            </p>
                            <ul class="space-y-3">
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Built-in tables, task lists, and auto-linking</span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Smart typography with quotes, em-dashes, and ellipses</span>
                                </li>
                                <li class="flex items-start gap-3">
                                    <svg class="w-6 h-6 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                    </svg>
                                    <span class="text-gray-700 dark:text-gray-300">Extensible with any markdown-it plugin</span>
                                </li>
                            </ul>
                            <a href="/core-concepts/markdown/" class="inline-flex items-center gap-2 mt-6 px-6 py-3 bg-gradient-to-r from-primary-500 to-blue-700 hover:from-primary-600 hover:to-blue-800 text-white font-semibold rounded-lg transition-all duration-200 shadow-md shadow-gray-900/10 dark:shadow-black/20 hover:shadow-lg hover:shadow-gray-900/15 dark:hover:shadow-black/30">
                                Learn More
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                </svg>
                            </a>
                        </div>
                        <div class="relative">
                            <pre class="language-markdown rounded-xl overflow-hidden shadow-md shadow-gray-900/5 dark:shadow-black/10"><code class="language-markdown">---
title: 'My Blog Post'
date: '2024-01-15'
tags: ['stati', 'markdown']
---

# Enhanced Markdown

Write **bold**, *italic*, and `inline code`

```typescript
interface Config {
  title: string;
  baseUrl: string;
}
```

- [x] Completed task
- [ ] Pending task

Auto-link: https://stati.build</code></pre>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- Tab switching script -->
    <script>
        (function() {
            let tabClickHandlers = [];
            let tabKeydownHandlers = [];

            function initializeTabs() {
                // Clean up existing handlers to prevent memory leaks
                cleanupTabs();

                const tabs = document.querySelectorAll('.feature-tab');
                const contents = document.querySelectorAll('.feature-content');
                const tabsArray = Array.from(tabs);

                function switchToTab(targetTab, focusTab = null) {
                    // Update tabs
                    tabs.forEach(t => {
                        t.classList.remove('active', 'bg-gradient-to-r', 'from-primary-500', 'to-blue-600', 'text-white', 'shadow-md', 'shadow-gray-900/10', 'dark:shadow-black/20');
                        t.classList.add('bg-white/90', 'dark:bg-dark-800', 'text-gray-700', 'dark:text-gray-300', 'hover:bg-gray-100', 'dark:hover:bg-dark-700', 'hover:shadow-sm', 'hover:shadow-gray-900/5', 'dark:hover:shadow-black/10', 'border', 'border-gray-300/60', 'dark:border-dark-600');
                        t.setAttribute('aria-selected', 'false');
                        t.setAttribute('tabindex', '-1');
                    });

                    const activeTab = document.querySelector(`[data-tab="${targetTab}"]`);
                    if (activeTab) {
                        activeTab.classList.remove('bg-white/90', 'dark:bg-dark-800', 'text-gray-700', 'dark:text-gray-300', 'hover:bg-gray-100', 'dark:hover:bg-dark-700', 'hover:shadow-sm', 'hover:shadow-gray-900/5', 'dark:hover:shadow-black/10', 'border', 'border-gray-300/60', 'dark:border-dark-600');
                        activeTab.classList.add('active', 'bg-gradient-to-r', 'from-primary-500', 'to-blue-600', 'text-white', 'shadow-md', 'shadow-gray-900/10', 'dark:shadow-black/20');
                        activeTab.setAttribute('aria-selected', 'true');
                        activeTab.setAttribute('tabindex', '0');

                        if (focusTab) {
                            activeTab.focus();
                        }
                    }

                    // Update content
                    contents.forEach(content => {
                        if (content.getAttribute('data-content') === targetTab) {
                            content.classList.remove('hidden');
                            content.classList.add('active');
                        } else {
                            content.classList.add('hidden');
                            content.classList.remove('active');
                        }
                    });
                }

                tabs.forEach((tab, index) => {
                    // Click handler
                    const clickHandler = function() {
                        const targetTab = this.getAttribute('data-tab');
                        switchToTab(targetTab);
                    };
                    tab.addEventListener('click', clickHandler);
                    tabClickHandlers.push({ element: tab, handler: clickHandler });

                    // Keyboard navigation handler
                    const keydownHandler = function(e) {
                        let newIndex = -1;

                        if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {
                            e.preventDefault();
                            newIndex = index - 1;
                            if (newIndex < 0) newIndex = tabsArray.length - 1;
                        } else if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {
                            e.preventDefault();
                            newIndex = index + 1;
                            if (newIndex >= tabsArray.length) newIndex = 0;
                        } else if (e.key === 'Home') {
                            e.preventDefault();
                            newIndex = 0;
                        } else if (e.key === 'End') {
                            e.preventDefault();
                            newIndex = tabsArray.length - 1;
                        }

                        if (newIndex !== -1) {
                            const targetTab = tabsArray[newIndex].getAttribute('data-tab');
                            switchToTab(targetTab, true);
                        }
                    };
                    tab.addEventListener('keydown', keydownHandler);
                    tabKeydownHandlers.push({ element: tab, handler: keydownHandler });
                });
            }

            function cleanupTabs() {
                // Remove all event listeners to prevent memory leaks
                tabClickHandlers.forEach(({ element, handler }) => {
                    element.removeEventListener('click', handler);
                });
                tabKeydownHandlers.forEach(({ element, handler }) => {
                    element.removeEventListener('keydown', handler);
                });
                tabClickHandlers = [];
                tabKeydownHandlers = [];
            }

            // Initialize on load
            document.addEventListener('DOMContentLoaded', initializeTabs);

            // Cleanup on unload
            window.addEventListener('beforeunload', cleanupTabs);
        })();
    </script>
</section>
