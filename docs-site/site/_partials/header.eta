<header class="bg-white/80 dark:bg-dark-900/80 backdrop-blur-lg border-b border-gray-200/50 dark:border-dark-700/50 sticky top-0 z-50 transition-colors duration-300">
    <div class="w-full px-6 lg:px-8">
        <div class="flex items-center justify-between h-18">
            <!-- Left side: Logo and brand -->
            <div class="flex items-center">
                <a href="/" class="flex items-center space-x-3 group">
                    <span class="inline-flex items-center justify-center w-12 h-12 bg-primary-500/10 dark:bg-primary-400/20 rounded-lg hover:scale-105 transition-transform duration-200">
                        <!-- Heroicon: Lightning Bolt (outline) -->
                        <svg class="w-8 h-8 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                        </svg>
                    </span>
                    <div>
                        <span class="text-2xl font-bold bg-gradient-to-r from-primary-700 to-primary-500 dark:from-primary-400 dark:to-primary-300 bg-clip-text text-transparent">Stati</span>
                        <span class="block text-sm text-gray-500 dark:text-gray-400 font-medium -mt-1">Documentation</span>
                    </div>
                </a>
            </div>

            <!-- Right side: Navigation and controls -->
            <div class="flex items-center space-x-4">
                <!-- Navigation -->
                <nav class="hidden lg:flex items-center space-x-1">
                    <a href="/getting-started/introduction/" class="nav-link px-4 py-2 rounded-lg text-gray-600 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400 hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium">
                        Getting Started
                    </a>
                    <a href="/core-concepts/overview/" class="nav-link px-4 py-2 rounded-lg text-gray-600 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400 hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium">
                        Core Concepts
                    </a>
                    <a href="/api/reference/" class="nav-link px-4 py-2 rounded-lg text-gray-600 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400 hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium">
                        API Reference
                    </a>
                    <a href="/examples/list/" class="nav-link px-4 py-2 rounded-lg text-gray-600 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400 hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium">
                        Examples
                    </a>
                </nav>

                <!-- External links and controls -->
                <div class="hidden lg:flex items-center space-x-2">
                    <!-- Theme toggle button -->
                    <button id="theme-toggle"
                            class="p-2.5 rounded-lg text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-dark-700 transition-all duration-200 group"
                            title="Toggle theme"
                            aria-label="Toggle dark mode">
                        <!-- Sun icon (visible in dark mode) -->
                        <svg class="w-5 h-5 hidden dark:block group-hover:scale-110 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                        </svg>
                        <!-- Moon icon (visible in light mode) -->
                        <svg class="w-5 h-5 block dark:hidden group-hover:scale-110 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                        </svg>
                    </button>

                    <a href="https://github.com/ianchak/stati"
                       class="p-2.5 rounded-lg text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-dark-700 transition-all duration-200 group"
                       target="_blank"
                       rel="noopener noreferrer"
                       title="View on GitHub">
                        <svg class="w-5 h-5 group-hover:scale-110 transition-transform duration-200" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                    </a>
                </div>

                <!-- Mobile menu button -->
                <button id="mobile-menu-btn" class="lg:hidden p-2.5 rounded-lg text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100/80 dark:hover:bg-dark-700/80 transition-all duration-200 backdrop-blur-sm">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Mobile Navigation Menu -->
    <div id="mobile-nav" class="hidden lg:hidden absolute top-full left-0 right-0 border-t border-gray-200/50 dark:border-dark-700/50 bg-white/95 dark:bg-dark-900/95 backdrop-blur-lg shadow-lg">
        <nav class="px-6 py-4 space-y-2">
            <a href="/getting-started/introduction/" class="block px-4 py-3 rounded-lg text-gray-600 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400 hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium">
                Getting Started
            </a>
            <a href="/core-concepts/overview/" class="block px-4 py-3 rounded-lg text-gray-600 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400 hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium">
                Core Concepts
            </a>
            <a href="/api/reference/" class="block px-4 py-3 rounded-lg text-gray-600 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400 hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium">
                API Reference
            </a>
            <a href="/examples/list/" class="block px-4 py-3 rounded-lg text-gray-600 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-400 hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium">
                Examples
            </a>
            <div class="border-t border-gray-200/50 dark:border-dark-700/50 my-2 pt-2">
                <!-- Theme toggle for mobile -->
                <button id="theme-toggle-mobile"
                        class="flex items-center gap-3 w-full px-4 py-3 rounded-lg text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium"
                        aria-label="Toggle dark mode">
                    <!-- Sun icon (visible in dark mode) -->
                    <svg class="w-5 h-5 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                    </svg>
                    <!-- Moon icon (visible in light mode) -->
                    <svg class="w-5 h-5 block dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                    </svg>
                    <span class="hidden dark:block">Light Mode</span>
                    <span class="block dark:hidden">Dark Mode</span>
                </button>

                <a href="https://github.com/ianchak/stati"
                   class="flex items-center gap-3 px-4 py-3 rounded-lg text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100/60 dark:hover:bg-dark-700/60 transition-all duration-200 font-medium"
                   target="_blank"
                   rel="noopener noreferrer">
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                    View on GitHub
                </a>
            </div>
        </nav>
    </div>
</header>

<script>
    // Mobile menu toggle for header navigation
    (function() {
        const mobileMenuBtn = document.getElementById('mobile-menu-btn');
        const mobileNav = document.getElementById('mobile-nav');
        let clickHandler, documentClickHandler, resizeHandler;

        function initializeMobileMenu() {
            if (mobileMenuBtn && mobileNav) {
                clickHandler = function(e) {
                    e.stopPropagation();
                    mobileNav.classList.toggle('hidden');
                };
                mobileMenuBtn.addEventListener('click', clickHandler);

                // Close menu when clicking outside
                documentClickHandler = function(e) {
                    if (!mobileNav.contains(e.target) && !mobileMenuBtn.contains(e.target)) {
                        mobileNav.classList.add('hidden');
                    }
                };
                document.addEventListener('click', documentClickHandler);

                // Close menu on window resize to desktop
                resizeHandler = function() {
                    if (window.innerWidth >= 1024) {
                        mobileNav.classList.add('hidden');
                    }
                };
                window.addEventListener('resize', resizeHandler);
            }
        }

        function cleanupMobileMenu() {
            if (mobileMenuBtn && clickHandler) {
                mobileMenuBtn.removeEventListener('click', clickHandler);
            }
            if (documentClickHandler) {
                document.removeEventListener('click', documentClickHandler);
            }
            if (resizeHandler) {
                window.removeEventListener('resize', resizeHandler);
            }
        }

        // Initialize on load
        document.addEventListener('DOMContentLoaded', initializeMobileMenu);

        // Cleanup on unload to prevent memory leaks
        window.addEventListener('beforeunload', cleanupMobileMenu);
    })();

    // Theme toggle functionality
    (function() {
        const STORAGE_KEY = 'theme';
        let themeToggleBtn, themeToggleMobileBtn, systemMediaQuery;
        let clickHandler, mobileClickHandler, mediaQueryHandler;

        function getSystemTheme() {
            return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        }

        function applyTheme(theme) {
            if (theme === 'dark') {
                document.documentElement.classList.add('dark');
            } else {
                document.documentElement.classList.remove('dark');
            }
        }

        function toggleTheme() {
            const currentTheme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

            applyTheme(newTheme);
            localStorage.setItem(STORAGE_KEY, newTheme);
        }

        function initializeTheme() {
            themeToggleBtn = document.getElementById('theme-toggle');
            themeToggleMobileBtn = document.getElementById('theme-toggle-mobile');

            // Check for saved theme preference or default to system preference
            const savedTheme = localStorage.getItem(STORAGE_KEY);

            if (savedTheme) {
                // User has a saved preference
                applyTheme(savedTheme);
            } else {
                // No saved preference - use system preference
                applyTheme(getSystemTheme());

                // Listen for system theme changes when no preference is saved
                systemMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
                mediaQueryHandler = (e) => {
                    // Only apply system theme if user hasn't set a preference
                    if (!localStorage.getItem(STORAGE_KEY)) {
                        applyTheme(e.matches ? 'dark' : 'light');
                    }
                };
                systemMediaQuery.addEventListener('change', mediaQueryHandler);
            }

            // Bind click handlers
            if (themeToggleBtn) {
                clickHandler = toggleTheme;
                themeToggleBtn.addEventListener('click', clickHandler);
            }

            if (themeToggleMobileBtn) {
                mobileClickHandler = toggleTheme;
                themeToggleMobileBtn.addEventListener('click', mobileClickHandler);
            }
        }

        function cleanupTheme() {
            if (themeToggleBtn && clickHandler) {
                themeToggleBtn.removeEventListener('click', clickHandler);
            }
            if (themeToggleMobileBtn && mobileClickHandler) {
                themeToggleMobileBtn.removeEventListener('click', mobileClickHandler);
            }
            if (systemMediaQuery && mediaQueryHandler) {
                systemMediaQuery.removeEventListener('change', mediaQueryHandler);
            }
        }

        // Initialize theme immediately (before DOMContentLoaded to prevent flash)
        initializeTheme();

        // Cleanup on unload
        window.addEventListener('beforeunload', cleanupTheme);
    })();
</script>
